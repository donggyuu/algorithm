'''
정수 X에 사용할 수 있는 연산은 4가지이다.

a. X가 5로 나누어떨어지면 5로 나눈다
b. X가 3으로 나누어떨어지면 3으로 나눈다
c. X가 2로 나누어떨어지면 2로 나눈다
d. X에서 1을 뺀다

X가 주어졌을 때, 연산 4개를 사용하여 1을 만들려고 한다.
연산을 사용하는 최소 횟수를 출력하시오.

예를 들어, X=26 이면
1. 26-1=25 (d)
2. 25/5=5 (a)
3. 5/5=1 (a)

**input
26

**output
3

'''
# greedy의 사용 조건에 부합하지 않는다.

# dynamic로 풀면 적합할 것 같다.
# 1. 큰 문제를 작은 문제로 나눌 수 있다.
# 2. 작은 문제에서 구한 정답은 그것을 포함하는 큰 문제에서도 동일하다.

# 점화식은, 4개 중 최소의 연산
# min(a, b, c, d) + 1 # 1은 연산 횟수

x = int(input())
f = [0] * 30001 # for 메모제이션

for i in range(2, x+1): # x=0이면 그냥 0출력

    # case_d
    f[i] = f[i-1] + 1

    # case_a
    if i % 5 == 0:
        f[i] = min(f[i], f[i//5] + 1)

    # case_b
    if x % 3 == 0:
        f[i] = min(f[i], f[i//3] +1)

    # case_c
    if x % 2 == 0:
        f[i] = min(f[i], f[i//2] +1)


print(f[x])


# --- 아래처럼 그리디로 풀면 오답 ----
# 큰 단위가 항상 작은 단위의 배수일 경우는 그리디
# 본 문제에서, 5가 항상 3의 배수인 것은 아니다
# 그러므로 그리디로 풀면 의도와는 다른 답이 나온다

# x = int(input())
# count = 0

# while True:
#     if x % 5 == 0:
#         x //= 5 
#     elif x % 3 == 0:
#         x //= 3
#     elif x % 2 == 0:
#         x //= 2
#     else:
#         x -= 1

#     count += 1
    
#     if x == 1:
#         break

# print(count)
